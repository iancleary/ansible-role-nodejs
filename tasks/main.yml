---
- import_tasks: setup-nodejs-Debian.yml
  when: ansible_os_family == 'Debian'

- import_tasks: setup-nodejs-RedHat.yml
  when: ansible_os_family == 'RedHat'

- name: Nodejs - Define nodejs_install_user
  ansible.builtin.set_fact:
    nodejs_install_npm_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
  when: nodejs_install_npm_user is not defined

- name: Nodejs - Define nodejs_install_group
  ansible.builtin.set_fact:
    nodejs_install_npm_group: "{{ ansible_user | default(lookup('env', 'USER')) }}"
  when: nodejs_install_npm_group is not defined

- name: Create npm global directory
  become: true
  ansible.builtin.file:
    path: "{{ npm_config_prefix }}"
    owner: "{{ nodejs_install_npm_user }}"
    group: "{{ nodejs_install_npm_group }}"
    mode: '0644'
    state: directory

- name: Add npm_config_prefix bin directory to global $PATH.
  become: true
  ansible.builtin.template:
    src: npm.sh.j2
    dest: /etc/profile.d/npm.sh
    mode: '0644'

- name: Find NPM global packages
  become: true
  changed_when: false
  ansible.builtin.shell:
    cmd: "ls {{ npm_config_prefix }}/lib/node_modules"
  register: installed_nodejs_npm_global_packages

- name: Debug (list currently installed NPM global packages)
  ansible.builtin.debug:
    msg: "{{ installed_nodejs_npm_global_packages.stdout_lines }}"


- name: Install NPM global packages
  become: true
  community.general.npm:
    name: "{{ item.name | default(item) }}"
    version: "{{ item.version | default('latest') }}"
    global: "yes"
    state: latest
  environment:
    NPM_CONFIG_PREFIX: "{{ npm_config_prefix }}"
    NODE_PATH: "{{ npm_config_prefix }}/lib/node_modules"
    NPM_CONFIG_UNSAFE_PERM: "{{ npm_config_unsafe_perm }}"
  loop: "{{ nodejs_npm_global_packages }}"
  when: item.name not in installed_nodejs_npm_global_packages.stdout_lines
  tags: ['skip_ansible_lint']
